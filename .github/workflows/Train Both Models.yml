name: Train Both Models

on:
  schedule:
    - cron: '0 0 * * 1'  # Ejecutar cada lunes a medianoche
  workflow_dispatch:      # Permite ejecuci√≥n manual

jobs:
  train_models:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Train Model 1
        run: |
          python train_model_1.py

      - name: Train Model 2
        run: |
          python train_model_2.py

      - name: Delete Existing Release
        run: |
          response=$(curl -s -X GET -H "Authorization: token ${{ secrets.CASO2 }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.0")

          if echo "$response" | grep -q '"id":'; then
            release_id=$(echo "$response" | jq -r '.id')
            curl -s -X DELETE -H "Authorization: token ${{ secrets.CASO2 }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"
          fi

          # Eliminar el tag
          curl -s -X DELETE -H "Authorization: token ${{ secrets.CASO2 }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/v1.0.0"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.CASO2 }}
          tag_name: v1.0.0
          release_name: "Trained Models Release"
          draft: false
          prerelease: false

      - name: Upload Trained Model 1 to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trained_model_1.pkl
          asset_name: trained_model_1.pkl
          asset_content_type: application/octet-stream

      - name: Upload Trained Model 2 to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trained_model_2.pkl
          asset_name: trained_model_2.pkl
          asset_content_type: application/octet-stream


